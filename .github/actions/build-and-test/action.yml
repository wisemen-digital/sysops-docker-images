---
name: "Build & test Docker image"
description: "Builds a Docker image, then runs tests (goss)"

inputs:
  image:
    description: "Image name (subdir containing Dockerfile)"
    required: true
  version:
    description: "Image version/tag"
    required: true
  target:
    description: "Dockerfile target to build"
    required: false
    default: final
  build-args:
    description: "Build arguments to pass along to Docker"
    required: false
  context:
    description: "Build context path (defaults to the image path)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Install Goss
      shell: bash
      run: |
          curl -sS -L https://github.com/goss-org/goss/releases/latest/download/goss-linux-amd64 -o /usr/local/bin/goss
          curl -sS -L https://github.com/goss-org/goss/releases/latest/download/dgoss -o /usr/local/bin/dgoss
          chmod +x /usr/local/bin/goss /usr/local/bin/dgoss
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: network=host
    - name: Build base image (if needed)
      id: build-base
      uses: ./.github/actions/prebuild-base
      with:
        image: ${{ inputs.image }}
        build-args: ${{ inputs.build-args }}
    - name: Build image
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context != '' && inputs.context || format('./{0}/', inputs.image) }}
        file: ./${{ inputs.image }}/Dockerfile
        load: true
        tags: ${{ inputs.image }}:${{ inputs.version }}
        target: ${{ inputs.target }}
        build-args: ${{ inputs.build-args }}
        build-contexts: ${{ steps.build-base.outputs.build-context }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      env:
        DOCKER_BUILD_SUMMARY: false
    - name: Run goss tests
      shell: bash
      run: |
        ./tests/run-tests.sh ${{ inputs.image }}:${{ inputs.version }} ${{ inputs.target }}
